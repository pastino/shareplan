type User {
  id: ID! @id 
  avatar: String
  nickname: String! @unique
  dateOfBirth: Int!
  userId: String! @unique
  password: String
  gender: String!
  bio: String
  talks: [Talk!]! @relation(name: "TalkRelation" onDelete:CASCADE)
  talkComments: [TalkComment!]! @relation(name: "TalkCommentsOfUser")
  talkRepplies: [TalkRepply!]! @relation(name: "TalkReppliesOfUser")
  clocks: [Clock!]! @relation(name: "ClockOfUser" onDelete:CASCADE)
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  isFollowing: Boolean
  isSelf: Boolean
  posts: [Post!]! @relation(name: "PostsOfUser" onDelete:CASCADE)
  postCounts: Int
  goals: [Goal!]! @relation(name: "GoalsOfUser" onDelete:CASCADE)
  goalCounts: Int   
  goalComments: [GoalComment!]! @relation(name: "GoalCommentOfUser" onDelete:CASCADE)
  goalRepplies: [GoalRepply!]! @relation(name: "GoalRepplyOfUser" onDelete:CASCADE)
  excellents: [Goal!]! @relation(name: "ExcellentOfUser" onDelete:CASCADE)
  favorites: [Goal!]! @relation(name: "FavoriteOfUser" onDelete:CASCADE)
  luckies: [Goal!]! @relation(name: "LuckyOfUser" onDelete:CASCADE)
  dayToDoes: [DayToDo!]! @relation(name: "DayToDoOfUser" onDelete:CASCADE)
  likes: [Post!]! @relation(name: "LikeOfUser" onDelete:CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser" onDelete:CASCADE)
  repplies:[Repply!]! @relation(name: "ReppliesOfUser" onDelete:CASCADE)
  rooms: [Room!]! 
  suggestions: [Suggestion!]! @relation(name: "SuggestionsOfUser" onDelete:CASCADE)
  feedOrdering: String
  useTermsPrivacyagreement: Boolean!
  snsLogin: String
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Talk {
  id: ID! @id 
  user: User! @relation(name: "TalkRelation")
  talkComments: [TalkComment!]! @relation(name: "TalkCommentsOfTalk" onDelete:CASCADE)
  talkRepplies: [TalkRepply!]! @relation(name: "TalkReppliesOfTalk" onDelete:CASCADE)
  talkCommentCounts: Int
  talkRepplyCounts: Int
  talkText: String!
  division: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TalkComment {
  id: ID! @id 
  user: User @relation(name: "TalkCommentsOfUser")
  talk: Talk! @relation(name: "TalkCommentsOfTalk")
  text: String!
  talkRepplies: [TalkRepply!]! @relation(name: "TalkReppliesOfTalkComment" onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TalkRepply {
  id: ID! @id 
  user: User @relation(name: "TalkReppliesOfUser")
  talkComment: TalkComment! @relation(name: "TalkReppliesOfTalkComment")
  talk: Talk! @relation(name: "TalkReppliesOfTalk")
  text: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Clock {
  id: ID! @id 
  user: User! @relation(name: "ClockOfUser")
  todayYear: Int!
  todayMonth: Int!
  todayDate: Int!
  wakeUpTime: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Goal {
  id: ID! @id
  user: User! @relation(name: "GoalsOfUser" )
  goalText: String!
  startDate: String!
  dDay: String!
  posts: [Post!]! @relation(name: "PostsOfGoal" onDelete:CASCADE)
  goalInformations: GoalInformation @relation(link: TABLE, name: "InformationOfGoal" onDelete:CASCADE)
  goalHistories: GoalHistory @relation(link: TABLE, name: "HistoryOfGoal" onDelete:CASCADE)
  detailPlans: [DetailPlan!] @relation(name: "PlanOfGoal" onDelete:CASCADE)
  category: String
  detailCategory: String
  goalComments: [GoalComment!]! @relation(name: "CommentsOfGoal" onDelete: CASCADE)
  goalCommentsCount: Int
  goalRepplies: [GoalRepply!]! @relation(name: "ReppliesOfGoal" onDelete: CASCADE)
  goalReppliesCount: Int
  excellents: [User!]! @relation(name: "ExcellentOfUser")
  favorites : [User!]! @relation(name: "FavoriteOfUser")
  luckies: [User!]! @relation(name: "LuckyOfUser")
  dayToDoes: [DayToDo!] @relation(name: "DayToDoOfGoal" onDelete: CASCADE)
  cardColor: String! 
  keyWord: String
  password: Int
  cardPrivate: Boolean!
  complete: Boolean
  completeDate: String
  postUploadDate: DateTime
  excellentCounts: Int
  viewCounts: Int
  luckyCounts: Int
  favoriteCounts: Int
  downloadCount: Int
  purchase: Boolean
  sale: String
  salePrice: Int
  mainImage: String
  introduceText: String
  target: String
  otherCosts: Int
  otherCostsDesc: String
  alramToken: String
  saleRejectText: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type GoalComment {
  id: ID! @id 
  text: String!
  user: User @relation(name: "GoalCommentOfUser")
  goal: Goal! @relation(name: "CommentsOfGoal")
  repply: [GoalRepply!]! @relation(name: "ReppliesOfGoalComment" onDelete:CASCADE)
  createdAt: DateTime! @createdAt 
  updatedAt: DateTime! @updatedAt
}

type GoalRepply {
  id: ID! @id 
  text: String!
  user: User  @relation(name: "GoalRepplyOfUser")
  goal: Goal! @relation(name: "ReppliesOfGoal")
  comment: GoalComment! @relation(name: "ReppliesOfGoalComment")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type GoalInformation {
  id: ID!@id
  goal: Goal! @relation(name: "InformationOfGoal")
  information: [Post!] @relation(name: "PostsOfInformation" onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type GoalHistory {
  id: ID!@id
  goal: Goal! @relation(name: "HistoryOfGoal")
  history: [Post!] @relation(name: "PostsOfHistory" onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type DetailPlan {
  id: ID!@id
  goal: Goal! @relation(name: "PlanOfGoal")
  stagePlanText: String!
  startingDay: DateTime!
  endDay: DateTime!
}

type DayToDo {
  id: ID!@id
  startDate: String!
  startTime: String
  endDate: String!
  endTime: String 
  alrams: [Alram!] @relation(name: "DayToDoOfAlram" onDelete:CASCADE)
  memo: String
  user: User! @relation(name: "DayToDoOfUser")
  toDoList: String!
  complete: Boolean!
  color: String!
  index: Int
  goal: Goal @relation(name: "DayToDoOfGoal")
  originToDoId: String
  posts: [Post] @relation(name: "DayToDoOfPost" onDelete: CASCADE )
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Alram {
   id: ID!@id
   dayToDo: DayToDo! @relation(name: "DayToDoOfAlram")
   time: Int!
   categoryId: Int
}

type Post {
  id: ID! @id 
  title: String!
  caption: String!
  user: User @relation(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost" onDelete:CASCADE)
  likes: [User!]! @relation(name: "LikeOfUser" onDelete: CASCADE)
  likeCount: Int
  goal: Goal! @relation(name: "PostsOfGoal")
  dayTodo: DayToDo! @relation(name: "DayToDoOfPost" )
  comments: [Comment!]! @relation(name: "CommentsOfPost" onDelete: CASCADE)
  repplies: [Repply!]! @relation(name: "ReppliesOfPost" onDelete: CASCADE)
  postPrivate: Boolean!
  assortment: String!
  goalInformation: GoalInformation @relation(name: "PostsOfInformation")
  goalHistory: GoalHistory @relation(name: "PostsOfHistory")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type Comment {
  id: ID! @id 
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
  repply: [Repply!]! @relation(name: "ReppliesOfComment" onDelete:CASCADE)
  createdAt: DateTime! @createdAt 
  updatedAt: DateTime! @updatedAt
}

type Repply {
  id: ID! @id 
  text: String!
  user: User  @relation(name: "ReppliesOfUser")
  comment: Comment! @relation(name: "ReppliesOfComment")
  post: Post! @relation(name: "ReppliesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id 
  url: String! 
  post: Post @relation(name: "FilesOfPost")
  postRatio: Float
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id 
  participants: [User!]!
  messages: [Message!]! 
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id 
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room! 
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Notice {
  id: ID! @id 
  title: String!
  text: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Suggestion {
  id: ID! @id 
  user: User! @relation(name: "SuggestionsOfUser")
  text: String!
  image: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}